import {AppContext, AppProps} from 'next/app';
import '@/styles/global.css';
import Head from 'next/head';
import React, {ReactElement, ReactNode} from 'react';
import {NextPage} from 'next';

export type NextPageWithLayout<P = {}, IP = P> = NextPage<P, IP> & {
  getLayout?: (page: ReactElement) => ReactNode
}

interface MyAppProps extends AppProps {
  url: string;
  Component: NextPageWithLayout;
}

const MyApp = ({Component, pageProps}: MyAppProps) => {
  const getLayout = Component.getLayout ?? ((page) => page);

  return getLayout(
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app"/>
        </Head>

        <Component {...pageProps} />
      </>
  );
};

MyApp.getInitialProps = async (appContext: AppContext) => {
  const {ctx} = appContext;
  const url = ctx.req?.headers.host || '';
  const pageProps = {};

  if (appContext.Component.getInitialProps) {
    const props = await appContext.Component.getInitialProps(ctx);
    Object.assign(pageProps, props);
  }

  return {
    pageProps,
    url,
  };
};

export default MyApp;